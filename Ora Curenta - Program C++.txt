// Lab8_Besa_Vasile_SeriaA_Grupa2112_Smg1
/*
Construiţi o aplicaţie în care clasa OraCurenta are ca atribute private ora, minutele şi secundele şi metode
publice de tip set/get pentru atributele clasei. Adaugaţi o functie friend clasei prin care să se poată copia
conţinutul unui obiect OraCurenta dat ca si parametru, într-un alt obiect instanţă a aceleiaşi clase care va fi
returnat de functie, ora fiind insa modificata la Greenwich Mean Time. Utilizati timpul curent al calculatorului.*/

#define _CRT_SECURE_NO_WARNINGS
#include<iostream>
#include<ctime>
using namespace std;

class OraCurenta
{
private:
        int ora;
        int minute;
        int secunde;
public:
        void setOra(int o) 
        {
                ora = o;
        }
        void setMinute(int m) 
        {
                minute = m;
        }
        void setSecunde(int s) 
        {
                secunde = s;
        }
        int getOra() 
        {
                return ora;
        }
        int getMinute() 
        {
                return minute;
        }
        int getSecunde() 
        {
                return secunde;
        }
        friend OraCurenta copiere(OraCurenta x);
};

OraCurenta copiere(OraCurenta x) 
{
        OraCurenta o;
        o.ora = x.ora;
        o.minute = x.minute;
        o.secunde = x.secunde;
        return o;

}
int main()
{
        time_t now;    
        struct tm newLocal;
    now = time(NULL);
    newLocal = *localtime(&now);
    cout << "Timpul este: " << newLocal.tm_hour << " " << newLocal.tm_min << " " << newLocal.tm_sec;
    cin.get();.

    int ora, minute, secunde;
    OraCurenta ob;
    OraCurenta obi;
    ob.setOra(newLocal.tm_hour);
    ob.setMinute(newLocal.tm_min);
    ob.setSecunde(newLocal.tm_sec);
    obi = copiere(ob);
    cout << "\t Ora GreenWich: " << obi.getOra() - 2 << "\t Minutul: " << obi.getMinute() << "\t Secunde: " << obi.getSecunde();
    return 0;
}